# ---- Global variable-----

board = ["-", "-", "-",
         "-", "-", "-",
         "-", "-", "-" ]

game_is_still_running = True

winner =  None

#next turn
current_player= "X"

def display_board():
  print(board[0] + " | " + board[1] + " | " + board[2])
  print(board[3] + " | " + board[4] + " | " + board[5])
  print(board[6] + " | " + board[7] + " | " + board[8])

def play_game():
  
  #display the board
  display_board()
  
  while game_is_still_running:
    #handle a single turn of an arbitrary player
    handle_turn(current_player)
    
    check_if_game_over()
    #flip to other player
    flip_player()

    #game over
    if winner == "X" or winner == "O":
      print(winner + " won")
      break
    elif winner ==None:
      print("tie.")
      break
    

def handle_turn(player):

  print(player + "'s turn'")
  position = input("choose  a position in between 1 to 9: ")
  valid = False
  while not valid:

    while position not in ["1","2","3","4","5","6","7","8","9"]:
      position = input("invalid input choose a position from 1-9")
    
    
    position = int(position)-1

    
  
    if board[position] =="-":
      valid = True
    else:
      print("you can't overwrite a value")

  board[position] = player  
  
  display_board()

def check_if_game_over():
  check_for_winner()
  check_if_tie()

def check_if_tie():
  global game_still_running
  if "-" not in board:
    game_still_running = False
  return

def check_for_winner():

  global winner
  #check rows
  row_winner = check_rows()
  #check columns
  column_winner = check_columns()
  #check diagonal
  diagonal_winner = check_diagonal()
  if row_winner:
    winner = row_winner
  elif column_winner:
      winner = column_winner
  elif diagonal_winner:
    winner = diagonal_winner
  else:
    winner = None
  return

def check_rows():
  # check if any of the row have same value
  global game_still_running 
  row_1 = board[0] == board[1] == board[2]
  row_2 = board[3] == board[4] == board[5]
  row_3 = board[6] == board[7] == board[8]
  if row_1 or row_2 or row_3:
    game_still_running = False
  if row_1:
    return board[0]
  elif row_2:
    return board[3]
  elif row_3:
    return board[6]  
  return
def check_columns():
  # check if any of the column have same value
  global game_still_running 
  column_1 = board[0] == board[3] == board[6]
  column_2 = board[1] == board[4] == board[7]
  column_3 = board[2] == board[5] == board[8]
  if column_1 or column_2 or column_3:
    game_still_running = False
  if column_1:
    return board[0]
  elif column_2:
    return board[3]
  elif column_3:
    return board[6] 
  return
def check_diagonal():
   # check if any of the diagonal have same value
  global game_still_running 
  diagonal_1 = board[0] == board[4] == board[8]
  diagonal_2 = board[2] == board[4] == board[6]
  if diagonal_1 or diagonal_2:
    game_still_running = False
  if diagonal_1:
    return board[0]
  elif diagonal_2:
    return board[3]
  return
def check_if_tie():
  return

def flip_player():
  global current_player
  # if current player is X then change to O
  if current_player == "X":
    current_player = "O"
  # if current player is O then change to X
  elif current_player == "O":
    current_player = "X"
  return
  
play_game()




